services:

  nifi:
    image: apache/nifi:1.28.1
    container_name: nifi
    ports:
      - "8443:8443"
    environment:
      NIFI_WEB_HTTPS_PORT: 8443
    depends_on:
      - streaming_simulation
      - namenode
      - datanode
    networks:
      custom_net:
        ipv4_address: 192.168.1.102
    volumes:
      - ./services/nifi/conf:/opt/nifi/nifi-current/conf
      - ./services/hadoop/config:/opt/hadoop/conf
    

  streaming_simulation:
    build:
      context: .
      dockerfile: ./services/streaming_simulation/Dockerfile
    container_name: streaming_simulation
    networks:
      custom_net:
        ipv4_address: 192.168.1.101
    ports:
      - "5001:5001"
    restart: unless-stopped

  batch_processing:
    build:
      context: .
      dockerfile: ./services/batch_processing/Dockerfile
    container_name: batch_processing
    networks:
      custom_net:
        ipv4_address: 192.168.1.107
    ports:
      - "5002:5002"
    depends_on:
      - cassandra
    restart: unless-stopped

  streaming_processing:
    build:
      context: .
      dockerfile: ./services/streaming_processing/Dockerfile
    container_name: streaming_processing
    networks:
      custom_net:
        ipv4_address: 192.168.1.108
    ports:
      - "5003:5003"
    depends_on:
      - kafka
      - nifi
      - spark-master

  spark-master:
    image: bitnami/spark:3.5.3
    container_name: spark-master
    environment:
      SPARK_MODE: master
      SPARK_MASTER_HOST: spark-master
      SPARK_LOCAL_IP: spark-master
      SPARK_MASTER_PORT: 7077
      SPARK_CONF_DIR: /opt/bitnami/spark/conf
      SPARK_DRIVER_MEMORY: "1g"
      SPARK_EXECUTOR_MEMORY: "1g"
      SPARK_CONF_spark_hive_metastore_uris: thrift://hive-metastore:9083
    ports:
      - "7077:7077" 
      - "8080:8080"
    volumes:
      - ./services/hadoop/config/core-site.xml:/opt/bitnami/spark/conf/core-site.xml
      - ./services/hadoop/config/hdfs-site.xml:/opt/bitnami/spark/conf/hdfs-site.xml
      - ./services/spark/hive-site.xml:/opt/bitnami/spark/conf/hive-site.xml
      - ./services/spark/setup:/docker-entrypoint-initdb.d
    networks:
      custom_net:
        ipv4_address: 192.168.1.109
    depends_on:
      - namenode
      - hive-metastore
      - zookeeper

  spark-worker:
    image: bitnami/spark:3.5.3
    container_name: spark-worker
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://spark-master:7077
      SPARK_WORKER_MEMORY: "1g"
      SPARK_WORKER_CORES: "1"
      SPARK_LOCAL_IP: spark-worker
    volumes:
      - ./services/hadoop/config/core-site.xml:/opt/bitnami/spark/conf/core-site.xml
      - ./services/hadoop/config/hdfs-site.xml:/opt/bitnami/spark/conf/hdfs-site.xml
      - ./services/spark/hive-site.xml:/opt/bitnami/spark/conf/hive-site.xml
      - ./services/spark/setup:/docker-entrypoint-initdb.d
    networks:
      custom_net:
        ipv4_address: 192.168.1.110
    depends_on:
      - spark-master

  cassandra:
    image: bitnami/cassandra:5.0.2
    container_name: cassandra
    ports:
      - "9042:9042"
    networks:
      custom_net:
        ipv4_address: 192.168.1.103
    environment:
      CASSANDRA_USERNAME: "cassandra"
      CASSANDRA_PASSWORD: "cassandra"
      CASSANDRA_CLUSTER_NAME: "NifiCluster"
      CASSANDRA_NUM_TOKENS: 256
      CASSANDRA_SEEDS: "cassandra"
    volumes:
      - cassandra_data:/var/lib/cassandra/data
      - ./services/cassandra/init-cql:/docker-entrypoint-initdb.d

  kafka:
    image: confluentinc/cp-kafka:7.8.0
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.105:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 1
    ports:
      - "9092:9092"
    networks:
      custom_net:
        ipv4_address: 192.168.1.105

  zookeeper:
    image: bitnami/zookeeper:3.8.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      custom_net:
        ipv4_address: 192.168.1.104

  kafdrop:
    image: obsidiandynamics/kafdrop:4.1.0
    container_name: kafdrop
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      SERVER_PORT: 9001
    ports:
      - "9001:9001"
    networks:
      custom_net:
        ipv4_address: 192.168.1.106
    depends_on:
      - kafka

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop2.7.4-java8
    container_name: namenode
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
      - ./services/hadoop/config/core-site.xml:/etc/hadoop/core-site.xml
      - ./services/hadoop/config/hdfs-site.xml:/etc/hadoop/hdfs-site.xml
    environment:
      - CLUSTER_NAME=hive
    env_file:
      - ./services/hive/hadoop-hive.env
    ports:
      - "50070:50070"
      - "8020:8020"
    networks:
      custom_net:
        ipv4_address: 192.168.1.115

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    container_name: datanode
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
      - ./services/hadoop/config/core-site.xml:/etc/hadoop/core-site.xml
      - ./services/hadoop/config/hdfs-site.xml:/etc/hadoop/hdfs-site.xml
    env_file:
      - ./services/hive/hadoop-hive.env
    environment:
      SERVICE_PRECONDITION: "namenode:50070"
    depends_on:
      - namenode
    ports:
      - "50075:50075"
    networks:
      custom_net:
        ipv4_address: 192.168.1.116

  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-server
    volumes:
      - ./services/hive/tables:/docker-entrypoint-initdb.d
      - ./services/hadoop/config/core-site.xml:/etc/hadoop/core-site.xml
      - ./services/hadoop/config/hdfs-site.xml:/etc/hadoop/hdfs-site.xml
    env_file:
      - ./services/hive/hadoop-hive.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
      HIVE_SITE_CONF_hive_zookeeper_quorum: "zookeeper:2181"
    depends_on:
      - hive-metastore
      - namenode
      - zookeeper
    networks:
      custom_net:
        ipv4_address: 192.168.1.117
    ports:
      - "10000:10000"

  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-metastore
    volumes:
      - ./services/hadoop/config/core-site.xml:/etc/hadoop/core-site.xml
      - ./services/hadoop/config/hdfs-site.xml:/etc/hadoop/hdfs-site.xml
    env_file:
      - ./services/hive/hadoop-hive.env
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075 hive-metastore-postgresql:5432 zookeeper:2181"
      HIVE_SITE_CONF_hive_zookeeper_quorum: "zookeeper:2181"
    command: /opt/hive/bin/hive --service metastore
    depends_on:
      - hive-metastore-postgresql
      - namenode
      - datanode
      - zookeeper
    networks:
      custom_net:
        ipv4_address: 192.168.1.118
    ports:
      - "9083:9083"

  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
    container_name: hive-metastore-postgresql
    volumes:
      - hive_postgresql_data:/var/lib/postgresql/data
    networks:
      custom_net:
        ipv4_address: 192.168.1.119
    depends_on:
      - datanode

  superset:
    build:
      context: ./services/superset
      dockerfile: Dockerfile
    container_name: superset
    environment:
      - ADMIN_USERNAME=admin
      - ADMIN_EMAIL=admin@superset.com
      - ADMIN_PASSWORD=admin
      - PYTHONPATH=/app/pythonpath
    volumes:
      - ./services/superset:/app/pythonpath:ro
      - superset_home:/app/superset_home
    ports:
      - '8088:8088'
    networks:
      custom_net:
        ipv4_address: 192.168.1.110
    depends_on:
      - cassandra
      - presto
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  presto:
    image: trinodb/trino:468
    container_name: presto
    ports:
      - "8080:8080"
    volumes:
      - ./services/presto/etc/catalog:/etc/trino/catalog
    networks:
      custom_net:
        ipv4_address: 192.168.1.120
    depends_on:
      - cassandra

networks:
  custom_net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.1.0/24

volumes:
  hadoop_namenode:
  hadoop_datanode:
  hive_postgresql_data:
  cassandra_data:
  presto-data:
  superset_home:
