services:

  nifi:
    image: apache/nifi:1.28.1
    container_name: nifi
    ports:
      - "8443:8443"
    environment:
      NIFI_WEB_HTTPS_PORT: 8443
    depends_on:
      - cassandra
      - zookeeper
      - streaming_simulation
      - kafka
    networks:
      custom_net:
        ipv4_address: 192.168.1.102
    volumes:
      - ./services/nifi/conf:/opt/nifi/nifi-current/conf
    #   - ./services/nifi/nar_extensions:/opt/nifi/nifi-current/nar_extensions
    #   - ./services/nifi/extensions:/opt/nifi/nifi-current/extensions
    

  streaming_simulation:
    image: docker.io/library/streaming_simulation:latest
    container_name: streaming_simulation
    networks:
      custom_net:
        ipv4_address: 192.168.1.101
    ports:
      - "5001:5001"
    restart: unless-stopped

  batch_processing:
    image: docker.io/library/batch_processing:latest
    container_name: batch_processing
    networks:
      custom_net:
        ipv4_address: 192.168.1.107
    ports:
      - "5002:5002"
    depends_on:
      - cassandra
      - nifi
    restart: unless-stopped

  streaming_processing:
    image: docker.io/library/streaming_processing:latest
    container_name: streaming_processing
    networks:
      custom_net:
        ipv4_address: 192.168.1.108
    ports:
      - "5003:5003"
    depends_on:
      - kafka
      - nifi
      - spark-master

  spark-master:
    image: bitnami/spark:3.5.3
    container_name: spark-master
    environment:
      SPARK_MODE: master
      SPARK_MASTER_HOST: spark-master
    ports:
      - "7077:7077" 
      - "8080:8080"
    networks:
      custom_net:
        ipv4_address: 192.168.1.109

  spark-worker:
    image: bitnami/spark:3.5.3
    container_name: spark-worker
    environment:
      SPARK_MODE: worker
      SPARK_MASTER_URL: spark://spark-master:7077
      SPARK_WORKER_MEMORY: 2G
      SPARK_WORKER_CORES: 2
    depends_on:
      - spark-master
    networks:
      custom_net:
        ipv4_address: 192.168.1.110

  cassandra:
    image: bitnami/cassandra:5.0.2
    container_name: cassandra
    ports:
      - "9042:9042"
    networks:
      custom_net:
        ipv4_address: 192.168.1.103
    environment:
      CASSANDRA_USERNAME: "cassandra"
      CASSANDRA_PASSWORD: "cassandra"
      CASSANDRA_CLUSTER_NAME: "NifiCluster"
      CASSANDRA_NUM_TOKENS: 256
      CASSANDRA_SEEDS: "cassandra"
    volumes:
      - ./services/cassandra/init-cql:/docker-entrypoint-initdb.d
    #   - ./services/cassandra/cassandra/data:/var/lib/cassandra/data  

  kafka:
    image: confluentinc/cp-kafka:7.8.0
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.105:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 1
    ports:
      - "9092:9092"
    networks:
      custom_net:
        ipv4_address: 192.168.1.105


  zookeeper:
    image: zookeeper:3.9.3
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      custom_net:
        ipv4_address: 192.168.1.104

  kafdrop:
    image: obsidiandynamics/kafdrop:4.1.0
    container_name: kafdrop
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      SERVER_PORT: 9001
    ports:
      - "9001:9001"
    networks:
      custom_net:
        ipv4_address: 192.168.1.106
    depends_on:
      - kafka

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop2.7.4-java8
    volumes:
      - namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop-hive.env
    ports:
      - "50070:50070"
  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop2.7.4-java8
    volumes:
      - datanode:/hadoop/dfs/data
    env_file:
      - ./hadoop-hive.env
    environment:
      SERVICE_PRECONDITION: "namenode:50070"
    ports:
      - "50075:50075"
  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    env_file:
      - ./hadoop-hive.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"
    ports:
      - "10000:10000"
  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    env_file:
      - ./hadoop-hive.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:50070 datanode:50075 hive-metastore-postgresql:5432"
    ports:
      - "9083:9083"
  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
  presto-coordinator:
    image: shawnzhu/prestodb:0.181
    ports:
      - "8080:8080"

volumes:
  namenode:
  datanode:


networks:
  custom_net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.1.0/24
